{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardsList.js","components/SearchBox.js","components/Scroll.js","containers/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","use","username","className","src","alt","CardsList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,KAAqBC,GAAY,EAA3BC,IAA2B,EAAtBC,SAAsB,EAAZF,OACvC,OACE,sBAAKG,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BN,EAA1B,YAAwCO,IAAI,WACtD,gCACA,6BAAKN,IACL,4BAAIC,WCSOM,EAdG,SAAC,GACjB,OADgC,EAAbC,OACLC,KAAI,SAACC,EAAMC,GACvB,OACE,cAAC,EAAD,CAEEZ,GAAIW,EAAKX,GACTC,KAAMU,EAAKV,KACXG,SAAUO,EAAKP,SACfF,MAAOS,EAAKT,OAJPS,EAAKX,QCQHa,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,mBACZC,SAAUH,OCGHI,G,MAVA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGJ,EAAMK,aCaEC,E,kDAjBb,WAAYN,GAAQ,IAAD,8BACjB,gBACKO,MAAQ,CACXC,UAAU,GAHK,E,qDAMnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,+DAEFG,KAAKX,MAAMK,a,GAdKQ,aCwCZC,E,kDAlCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAX1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBG,MAAM,8CACH9C,MAAK,SAAC+C,GAAD,OAAcA,EAASC,UAC5BhD,MAAK,SAACiD,GAAD,OAAW,EAAKX,SAAS,CAAEtB,OAAQiC,S,oBAK7C,WACE,MAAgCZ,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVO,EAAiBlC,EAAOmC,QAAO,SAACC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASX,EAAYU,kBAEvD,OACE,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAWzB,OAAQkC,e,GA3BbX,aCAlBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.582d680d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = ({ id, name, use, username, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots'></img>\n    <div>\n    <h2>{name}</h2>\n    <p>{email}</p>\n    </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardsList = ({ robots }) => {\n  return robots.map((user, i) => {\n    return (\n      <Card\n        key={user.id}\n        id={user.id}\n        name={user.name}\n        username={user.username}\n        email={user.email}\n      />\n    )\n  })\n}\n\nexport default CardsList\n","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search robots...\"\n        onChange={searchChange}\n      ></input>\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      hasError: false,\n    }\n  }\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1>Whoops! An Error has ocurred.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry\n","import React, { Component } from 'react'\nimport CardsList from '../components/CardsList'\nimport SearchBox from '../components/SearchBox'\nimport './App.css'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from './ErrorBoundary'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }))\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n  render() {\n    const { robots, searchfield } = this.state\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardsList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport 'tachyons'\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}